//
// UserDetailsRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "FunkwhaleClientAPI.UserDetailsRequest")
public typealias UserDetailsRequest = FunkwhaleClientAPI.UserDetailsRequest

extension FunkwhaleClientAPI {

/** User model w/o password */
public struct UserDetailsRequest: Codable, JSONEncodable, Hashable {

    static let usernameRule = StringRule(minLength: 1, maxLength: 150, pattern: "/^[\\w.@+-]+$/")
    static let firstNameRule = StringRule(minLength: nil, maxLength: 150, pattern: nil)
    static let lastNameRule = StringRule(minLength: nil, maxLength: 150, pattern: nil)
    /** Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. */
    public var username: String
    public var firstName: String?
    public var lastName: String?

    public init(username: String, firstName: String? = nil, lastName: String? = nil) {
        self.username = username
        self.firstName = firstName
        self.lastName = lastName
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case username
        case firstName = "first_name"
        case lastName = "last_name"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(username, forKey: .username)
        try container.encodeIfPresent(firstName, forKey: .firstName)
        try container.encodeIfPresent(lastName, forKey: .lastName)
    }
}

}
