//
// Album.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "FunkwhaleClientAPI.Album")
public typealias Album = FunkwhaleClientAPI.Album

extension FunkwhaleClientAPI {

public struct Album: Codable, JSONEncodable, Hashable {

    public var artist: SimpleArtist
    public var cover: CoverField?
    public var isPlayable: Bool
    public var tags: [String]
    public var tracksCount: Int
    public var attributedTo: APIActor
    public var id: Int
    public var fid: String
    public var mbid: UUID
    public var title: String
    public var releaseDate: Date
    public var creationDate: Date
    public var isLocal: Bool
    public var duration: Int

    public init(artist: SimpleArtist, cover: CoverField?, isPlayable: Bool, tags: [String], tracksCount: Int, attributedTo: APIActor, id: Int, fid: String, mbid: UUID, title: String, releaseDate: Date, creationDate: Date, isLocal: Bool, duration: Int) {
        self.artist = artist
        self.cover = cover
        self.isPlayable = isPlayable
        self.tags = tags
        self.tracksCount = tracksCount
        self.attributedTo = attributedTo
        self.id = id
        self.fid = fid
        self.mbid = mbid
        self.title = title
        self.releaseDate = releaseDate
        self.creationDate = creationDate
        self.isLocal = isLocal
        self.duration = duration
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case artist
        case cover
        case isPlayable = "is_playable"
        case tags
        case tracksCount = "tracks_count"
        case attributedTo = "attributed_to"
        case id
        case fid
        case mbid
        case title
        case releaseDate = "release_date"
        case creationDate = "creation_date"
        case isLocal = "is_local"
        case duration
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(artist, forKey: .artist)
        try container.encode(cover, forKey: .cover)
        try container.encode(isPlayable, forKey: .isPlayable)
        try container.encode(tags, forKey: .tags)
        try container.encode(tracksCount, forKey: .tracksCount)
        try container.encode(attributedTo, forKey: .attributedTo)
        try container.encode(id, forKey: .id)
        try container.encode(fid, forKey: .fid)
        try container.encode(mbid, forKey: .mbid)
        try container.encode(title, forKey: .title)
        try container.encode(releaseDate, forKey: .releaseDate)
        try container.encode(creationDate, forKey: .creationDate)
        try container.encode(isLocal, forKey: .isLocal)
        try container.encode(duration, forKey: .duration)
    }
}

}
