//
// ManageBaseNote.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "FunkwhaleClientAPI.ManageBaseNote")
public typealias ManageBaseNote = FunkwhaleClientAPI.ManageBaseNote

extension FunkwhaleClientAPI {

public struct ManageBaseNote: Codable, JSONEncodable, Hashable {

    static let summaryRule = StringRule(minLength: nil, maxLength: 50000, pattern: nil)
    public var id: Int
    public var uuid: UUID
    public var creationDate: Date
    public var summary: String
    public var author: ManageBaseActor

    public init(id: Int, uuid: UUID, creationDate: Date, summary: String, author: ManageBaseActor) {
        self.id = id
        self.uuid = uuid
        self.creationDate = creationDate
        self.summary = summary
        self.author = author
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case uuid
        case creationDate = "creation_date"
        case summary
        case author
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(uuid, forKey: .uuid)
        try container.encode(creationDate, forKey: .creationDate)
        try container.encode(summary, forKey: .summary)
        try container.encode(author, forKey: .author)
    }
}

}
