//
// ManageUserRequestRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "FunkwhaleClientAPI.ManageUserRequestRequest")
public typealias ManageUserRequestRequest = FunkwhaleClientAPI.ManageUserRequestRequest

extension FunkwhaleClientAPI {

public struct ManageUserRequestRequest: Codable, JSONEncodable, Hashable {

    public var type: ManageUserRequestTypeEnum
    public var status: ManageUserRequestStatusEnum?
    public var assignedTo: ManageBaseActorRequest
    public var submitter: ManageBaseActorRequest

    public init(type: ManageUserRequestTypeEnum, status: ManageUserRequestStatusEnum? = nil, assignedTo: ManageBaseActorRequest, submitter: ManageBaseActorRequest) {
        self.type = type
        self.status = status
        self.assignedTo = assignedTo
        self.submitter = submitter
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case status
        case assignedTo = "assigned_to"
        case submitter
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(type, forKey: .type)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encode(assignedTo, forKey: .assignedTo)
        try container.encode(submitter, forKey: .submitter)
    }
}

}
