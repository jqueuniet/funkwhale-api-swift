//
// AllSubscriptions.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "FunkwhaleClientAPI.AllSubscriptions")
public typealias AllSubscriptions = FunkwhaleClientAPI.AllSubscriptions

extension FunkwhaleClientAPI {

public struct AllSubscriptions: Codable, JSONEncodable, Hashable {

    public var results: [InlineSubscription]
    public var count: Int

    public init(results: [InlineSubscription], count: Int) {
        self.results = results
        self.count = count
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case results
        case count
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(results, forKey: .results)
        try container.encode(count, forKey: .count)
    }
}

}
