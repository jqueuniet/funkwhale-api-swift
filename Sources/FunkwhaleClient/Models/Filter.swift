//
// Filter.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "FunkwhaleClientAPI.Filter")
public typealias Filter = FunkwhaleClientAPI.Filter

extension FunkwhaleClientAPI {

public struct Filter: Codable, JSONEncodable, Hashable {

    public var type: String
    public var label: String
    public var helpText: String
    public var fields: String

    public init(type: String, label: String, helpText: String, fields: String) {
        self.type = type
        self.label = label
        self.helpText = helpText
        self.fields = fields
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case label
        case helpText = "help_text"
        case fields
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(type, forKey: .type)
        try container.encode(label, forKey: .label)
        try container.encode(helpText, forKey: .helpText)
        try container.encode(fields, forKey: .fields)
    }
}

}
