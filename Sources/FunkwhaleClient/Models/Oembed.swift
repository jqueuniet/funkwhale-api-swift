//
// Oembed.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "FunkwhaleClientAPI.Oembed")
public typealias Oembed = FunkwhaleClientAPI.Oembed

extension FunkwhaleClientAPI {

public struct Oembed: Codable, JSONEncodable, Hashable {

    public var format: FormatEnum
    public var url: String
    public var maxheight: Int?
    public var maxwidth: Int?

    public init(format: FormatEnum, url: String, maxheight: Int? = nil, maxwidth: Int? = nil) {
        self.format = format
        self.url = url
        self.maxheight = maxheight
        self.maxwidth = maxwidth
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case format
        case url
        case maxheight
        case maxwidth
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(format, forKey: .format)
        try container.encode(url, forKey: .url)
        try container.encodeIfPresent(maxheight, forKey: .maxheight)
        try container.encodeIfPresent(maxwidth, forKey: .maxwidth)
    }
}

}
