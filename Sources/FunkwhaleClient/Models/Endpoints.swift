//
// Endpoints.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "FunkwhaleClientAPI.Endpoints")
public typealias Endpoints = FunkwhaleClientAPI.Endpoints

extension FunkwhaleClientAPI {

public struct Endpoints: Codable, JSONEncodable, Hashable {

    public var knownNodes: String?
    public var channels: String?
    public var libraries: String?

    public init(knownNodes: String? = nil, channels: String? = nil, libraries: String? = nil) {
        self.knownNodes = knownNodes
        self.channels = channels
        self.libraries = libraries
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case knownNodes
        case channels
        case libraries
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(knownNodes, forKey: .knownNodes)
        try container.encodeIfPresent(channels, forKey: .channels)
        try container.encodeIfPresent(libraries, forKey: .libraries)
    }
}

}
