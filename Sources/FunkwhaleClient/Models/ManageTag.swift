//
// ManageTag.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "FunkwhaleClientAPI.ManageTag")
public typealias ManageTag = FunkwhaleClientAPI.ManageTag

extension FunkwhaleClientAPI {

public struct ManageTag: Codable, JSONEncodable, Hashable {

    static let nameRule = StringRule(minLength: nil, maxLength: 100, pattern: nil)
    public var id: Int
    public var name: String
    public var creationDate: Date?
    public var tracksCount: Int
    public var albumsCount: Int
    public var artistsCount: Int

    public init(id: Int, name: String, creationDate: Date? = nil, tracksCount: Int, albumsCount: Int, artistsCount: Int) {
        self.id = id
        self.name = name
        self.creationDate = creationDate
        self.tracksCount = tracksCount
        self.albumsCount = albumsCount
        self.artistsCount = artistsCount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case creationDate = "creation_date"
        case tracksCount = "tracks_count"
        case albumsCount = "albums_count"
        case artistsCount = "artists_count"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(creationDate, forKey: .creationDate)
        try container.encode(tracksCount, forKey: .tracksCount)
        try container.encode(albumsCount, forKey: .albumsCount)
        try container.encode(artistsCount, forKey: .artistsCount)
    }
}

}
