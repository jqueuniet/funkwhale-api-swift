//
// ManageInvitationRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "FunkwhaleClientAPI.ManageInvitationRequest")
public typealias ManageInvitationRequest = FunkwhaleClientAPI.ManageInvitationRequest

extension FunkwhaleClientAPI {

public struct ManageInvitationRequest: Codable, JSONEncodable, Hashable {

    static let codeRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    public var owner: ManageUserSimpleRequest?
    public var invitedUser: ManageUserSimpleRequest?
    public var code: String?
    public var users: [ManageUserSimpleRequest]?

    public init(owner: ManageUserSimpleRequest? = nil, invitedUser: ManageUserSimpleRequest? = nil, code: String? = nil, users: [ManageUserSimpleRequest]? = nil) {
        self.owner = owner
        self.invitedUser = invitedUser
        self.code = code
        self.users = users
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case owner
        case invitedUser = "invited_user"
        case code
        case users
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(owner, forKey: .owner)
        try container.encodeIfPresent(invitedUser, forKey: .invitedUser)
        try container.encodeIfPresent(code, forKey: .code)
        try container.encodeIfPresent(users, forKey: .users)
    }
}

}
