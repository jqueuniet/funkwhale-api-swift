//
// PasswordChangeRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "FunkwhaleClientAPI.PasswordChangeRequest")
public typealias PasswordChangeRequest = FunkwhaleClientAPI.PasswordChangeRequest

extension FunkwhaleClientAPI {

public struct PasswordChangeRequest: Codable, JSONEncodable, Hashable {

    static let oldPasswordRule = StringRule(minLength: 1, maxLength: 128, pattern: nil)
    static let newPassword1Rule = StringRule(minLength: 1, maxLength: 128, pattern: nil)
    static let newPassword2Rule = StringRule(minLength: 1, maxLength: 128, pattern: nil)
    public var oldPassword: String
    public var newPassword1: String
    public var newPassword2: String

    public init(oldPassword: String, newPassword1: String, newPassword2: String) {
        self.oldPassword = oldPassword
        self.newPassword1 = newPassword1
        self.newPassword2 = newPassword2
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case oldPassword = "old_password"
        case newPassword1 = "new_password1"
        case newPassword2 = "new_password2"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(oldPassword, forKey: .oldPassword)
        try container.encode(newPassword1, forKey: .newPassword1)
        try container.encode(newPassword2, forKey: .newPassword2)
    }
}

}
