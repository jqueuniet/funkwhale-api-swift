//
// MetadataUsage.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "FunkwhaleClientAPI.MetadataUsage")
public typealias MetadataUsage = FunkwhaleClientAPI.MetadataUsage

extension FunkwhaleClientAPI {

public struct MetadataUsage: Codable, JSONEncodable, Hashable {

    public var favorites: MetadataUsageFavorite
    public var listenings: TotalCount
    public var downloads: TotalCount

    public init(favorites: MetadataUsageFavorite, listenings: TotalCount, downloads: TotalCount) {
        self.favorites = favorites
        self.listenings = listenings
        self.downloads = downloads
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case favorites
        case listenings
        case downloads
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(favorites, forKey: .favorites)
        try container.encode(listenings, forKey: .listenings)
        try container.encode(downloads, forKey: .downloads)
    }
}

}
