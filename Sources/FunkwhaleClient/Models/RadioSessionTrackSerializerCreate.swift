//
// RadioSessionTrackSerializerCreate.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "FunkwhaleClientAPI.RadioSessionTrackSerializerCreate")
public typealias RadioSessionTrackSerializerCreate = FunkwhaleClientAPI.RadioSessionTrackSerializerCreate

extension FunkwhaleClientAPI {

public struct RadioSessionTrackSerializerCreate: Codable, JSONEncodable, Hashable {

    public var session: Int
    public var count: Int?

    public init(session: Int, count: Int? = nil) {
        self.session = session
        self.count = count
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case session
        case count
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(session, forKey: .session)
        try container.encodeIfPresent(count, forKey: .count)
    }
}

}
