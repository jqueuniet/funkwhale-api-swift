//
// InlineSubscription.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "FunkwhaleClientAPI.InlineSubscription")
public typealias InlineSubscription = FunkwhaleClientAPI.InlineSubscription

extension FunkwhaleClientAPI {

public struct InlineSubscription: Codable, JSONEncodable, Hashable {

    public var uuid: UUID
    public var channel: UUID

    public init(uuid: UUID, channel: UUID) {
        self.uuid = uuid
        self.channel = channel
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case uuid
        case channel
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(uuid, forKey: .uuid)
        try container.encode(channel, forKey: .channel)
    }
}

}
