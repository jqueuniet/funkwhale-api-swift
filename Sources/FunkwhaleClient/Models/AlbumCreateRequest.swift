//
// AlbumCreateRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "FunkwhaleClientAPI.AlbumCreateRequest")
public typealias AlbumCreateRequest = FunkwhaleClientAPI.AlbumCreateRequest

extension FunkwhaleClientAPI {

public struct AlbumCreateRequest: Codable, JSONEncodable, Hashable {

    static let titleRule = StringRule(minLength: 1, maxLength: 255, pattern: nil)
    public var cover: String?
    public var title: String
    public var releaseDate: Date?
    public var tags: [String]?
    public var description: ContentRequest?
    public var artist: String

    public init(cover: String? = nil, title: String, releaseDate: Date? = nil, tags: [String]? = nil, description: ContentRequest? = nil, artist: String) {
        self.cover = cover
        self.title = title
        self.releaseDate = releaseDate
        self.tags = tags
        self.description = description
        self.artist = artist
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case cover
        case title
        case releaseDate = "release_date"
        case tags
        case description
        case artist
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(cover, forKey: .cover)
        try container.encode(title, forKey: .title)
        try container.encodeIfPresent(releaseDate, forKey: .releaseDate)
        try container.encodeIfPresent(tags, forKey: .tags)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encode(artist, forKey: .artist)
    }
}

}
