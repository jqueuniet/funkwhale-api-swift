//
// LibraryFollow.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "FunkwhaleClientAPI.LibraryFollow")
public typealias LibraryFollow = FunkwhaleClientAPI.LibraryFollow

extension FunkwhaleClientAPI {

public struct LibraryFollow: Codable, JSONEncodable, Hashable {

    public var creationDate: Date
    public var actor: APIActor
    public var uuid: UUID
    public var target: String
    public var approved: Bool?

    public init(creationDate: Date, actor: APIActor, uuid: UUID, target: String, approved: Bool?) {
        self.creationDate = creationDate
        self.actor = actor
        self.uuid = uuid
        self.target = target
        self.approved = approved
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case creationDate = "creation_date"
        case actor
        case uuid
        case target
        case approved
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(creationDate, forKey: .creationDate)
        try container.encode(actor, forKey: .actor)
        try container.encode(uuid, forKey: .uuid)
        try container.encode(target, forKey: .target)
        try container.encode(approved, forKey: .approved)
    }
}

}
